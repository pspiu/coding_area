Link: https://leetcode.com/problems/min-stack/
Title: Min Stack
Description: 
Design a stack that supports push, pop, top, and retrieving the minimum element in constant time.
push(x) -- Push element x onto stack.
pop() -- Removes the element on top of the stack.
top() -- Get the top element.
getMin() -- Retrieve the minimum element in the stack.

class MinStack {
    private int stack[];
    private int top;
    private int min;
          
    /** initialize your data structure here. */
    public MinStack() {
       stack = new int[100000000];
        top=-1; min= Integer.MAX_VALUE;
      
    }
    
    public void push(int x) {
       if(top == -1)
       {
           min = x;
       }
        else{
            if(x < stack[top])
                min = x;
            else
                min = stack[top];
            }
        stack[++top] =x;
           
    }
    
    public void pop() {
        if(stack[top]==min)
               
    }
    
    public int top() {
       return stack[top];
    }
          
    public int getMin() {     
        return min;
    }
}

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack obj = new MinStack();
 * obj.push(x);
 * obj.pop();
 * int param_3 = obj.top();
 * int param_4 = obj.getMin();
 */