Topic: https://leetcode.com/problems/bitwise-and-of-numbers-range/
Link : https://leetcode.com/problems/bitwise-and-of-numbers-range/
Description: 
Given a range [m, n] where 0 <= m <= n <= 2147483647, return the bitwise AND of all numbers in this range, inclusive.
Example 1:
Input: [5,7]
Output: 4
Example 2:
Input: [0,1]
Output: 0

class Solution {
//Way 1 
   public int rangeBitwiseAnd(int m, int n) {
int res = 0; // Initialize result  
        while (m > 0 && n > 0) {  
              
            // Find positions of MSB in m and n  
            int msb_m = msbPos(m);  
            int msb_n = msbPos(n);  
  
            // If positions are not same, return  
            if (msb_m != msb_n)  
                break;  
  
            // Add 2^msb_m to result  
            int msb_val = (1 << msb_m);  
            res = res + msb_val;  
  
            // subtract 2^msb_p1 from x and y.  
            m = m - msb_val;  
            n = n - msb_val;  
        }  
  
        return res;
    }
     public  int msbPos(int num)  
    {            
        int msb_pos = 0;  
        while (num >1) {  
            num = num >> 1;  
            msb_pos++;  
        }  
          
        return msb_pos;  
    } 

//Way 2
public int rangeBitwiseAnd(int a, int b) {
 while(a < b) 
        {  
            // -b is the 2's complement of b when do bitwise or with b  
            //we get LSB and we subtract that from b  
            b -= (b & -b);  
        }  
        return b;  
}
}